import random
x1=random.random()
print('x1=',x1)





def couleur(x1):
    """
    fzefzfzfezfezfze -> list[str]
    """

    Color=[]

    if x1>= 0 and x1 <= 0.1:
        Color.append('red')
    elif x1>0.10 and x1 <=0.20:
        Color.append('blue')
    elif x1>0.2:
        Color.append('black')
        
    return Color

Color=couleur(x1)
print(Color)


x2=random.random()
print('x2=',x2)
def couleur2(x2):
    """
    fzefzfzfezfezfze -> list[str]
    """

    Color2=[]

    if x2>= 0 and x2 <= 0.1:
        Color2.append('red')
    elif x2>0.10 and x2 <=0.20:
        Color2.append('blue')
    elif x2>0.2:
        Color2.append('black')
    
    return Color2

Color2=couleur2(x2)
print(Color2)


x3=random.random()
print('x3=',x3)
def couleur3(x3):
    """
    fzefzfzfezfezfze -> list[str]
    """

    Color3=[]

    if x3>= 0 and x3 <= 0.1:
        Color3.append('red')
    elif x3>0.10 and x3 <=0.20:
        Color3.append('blue')
    elif x3>0.2:
        Color3.append('black')
    
    return Color3

Color3=couleur3(x3)
print(Color3)


x4=random.random()
print('x4=',x4)

def couleur4(x4):
    """
    fzefzfzfezfezfze -> list[str]
    """

    Color4=[]

    if x4>= 0 and x4 <= 0.1:
        Color4.append('red')
    elif x4>0.10 and x4 <=0.20:
        Color4.append('blue')
    elif x4>0.2:
        Color4.append('black')
    
    
    return Color4
Color4=couleur4(x4)
print(Color4)


x5=random.random()
print('x5=',x5)

def couleur5(x5):
    """
    fzefzfzfezfezfze -> list[str]
    """

    Color5=[]

    if x5>= 0 and x5 <= 0.1:
        Color5.append('red')
    elif x5>0.10 and x5 <=0.20:
        Color5.append('blue')
    elif x5>0.2:
        Color5.append('black')
    
    return Color5
Color5=couleur5(x5)
print(Color5)

from tkinter import*
import random
import time
import math
import cmath


WIDTH = 500
HEIGHT = 400

root = Tk()
canvas = Canvas(root, width = WIDTH, height= HEIGHT, bg='white')
canvas.pack(padx =5, pady =5)
root.title('Bouncing Ball')
canvas.pack()


RAYON = 15 # rayon de la balle

# position initiale au milieu
X=50
Y=50
XC=WIDTH/2
YC=HEIGHT/2
Balle = canvas.create_oval(X,Y,X,Y,fill='red')
cangle=cmath.exp(0.05j)
print(cangle)

def deplacement():
    """  de la balle """
    global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
    V=cangle*complex(X,Y)
    X=V.real
    Y=V.imag
    
    # affichage
    canvas.coords(Balle,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)


    root.after(50,deplacement)
deplacement()

def cercle():
    
    x2=random.random()
    x3=random.random()
    x4=random.random()
    x5=random.random()

    Color=couleur(x1)
    Color2=couleur2(x2)
    Color3=couleur3(x3)
    Color4=couleur4(x4)
    Color5=couleur5(x5)
    
    Color6=[]
        
    if  x1 <= 0.1 or x2 <= 0.1 or x3 <= 0.1 or x4 <= 0.1 or x5 <= 0.1: 
        Color6.append('blue')
    elif x1 > 0.1 and x1 <=0.2 or x2 > 0.1 and x2 <=0.2 or x3 > 0.1 and x3 <=0.2 or x4 > 0.1 and x4 <=0.2 or x5 > 0.1 and x5 <=0.2: 
        Color6.append('red')
   
    else:
        Color6.append('black')
    
    global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
    V=cangle*complex(X,Y)
    X=V.real
    Y=V.imag
    
    ball = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color,1))
    ball2 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color2,1))
    ball3 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color3,1))
    ball4 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color4,1))
    ball5 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color5,1))
    ball6 = canvas.create_oval(X,Y,X,Y, fill=random.sample(Color6,1))
    
     # affichage
    canvas.coords(ball6,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)

    root.after(50,cercle)
    

    xspeed = 10 
    yspeed = 10 
 
    xspeed2 = 6
    yspeed2 = 6

    xspeed3 = 2
    yspeed3 = 11
    
    xspeed4 = 4
    yspeed4 = 7

    xspeed5 = 7
    yspeed5 = 8


    while True:
        canvas.move(ball, xspeed, yspeed)
        pos = canvas.coords(ball)

        if pos[3] >= HEIGHT or pos[1] <= 0:
            yspeed = -yspeed
        if pos[2] >= WIDTH or pos[0] <= 0:
            xspeed = -xspeed

            
        canvas.move(ball2, xspeed2, yspeed2)
        pos = canvas.coords(ball2)
        if pos[3] >= HEIGHT or pos[1] <= 0:
            yspeed2 = -yspeed2
        if pos[2] >= WIDTH or pos[0] <= 0:
            xspeed2 = -xspeed2
            
        canvas.move(ball3, xspeed3, yspeed3)
        pos = canvas.coords(ball3)
        if pos[3] >= HEIGHT or pos[1] <= 0:
            yspeed3 = -yspeed3
        if pos[2] >= WIDTH or pos[0] <= 0:
            xspeed3 = -xspeed3
            
      
        canvas.move(ball4, xspeed4, yspeed4)
        pos = canvas.coords(ball4)
        if pos[3] >= HEIGHT or pos[1] <= 0:
            yspeed4 = -yspeed4
        if pos[2] >= WIDTH or pos[0] <= 0:
            xspeed4 = -xspeed4
   
        canvas.move(ball5, xspeed5, yspeed5)
        pos = canvas.coords(ball5)
        if pos[3] >= HEIGHT or pos[1] <= 0:
            yspeed5 = -yspeed5
        if pos[2] >= WIDTH or pos[0] <= 0:
            xspeed5 = -xspeed5
            
            
        
        root.update()
        time.sleep(0.04)

   
def Effacer():

    canvas.delete(ALL)
    
            
        

BoutonGo = Button(root, text ='Go', command = cercle)
BoutonGo.pack(side = LEFT, padx = 10, pady = 10)

BoutonEffacer = Button(root, text ='Effacer', command = Effacer)
BoutonEffacer.pack(side = LEFT, padx = 5, pady = 5)




Checkbutton(root,text="A",command=cercle).pack(side=TOP,padx=10,pady=10)
Checkbutton(root,text="B",command=cercle).pack(side=TOP,padx=10,pady=10)
Checkbutton(root,text="C",command=cercle).pack(side=TOP,padx=10,pady=10)

Checkbutton(root,text="X",command=cercle).pack(side=BOTTOM,padx=10,pady=10)
Checkbutton(root,text="Y",command=cercle).pack(side=BOTTOM,padx=10,pady=10)
Checkbutton(root,text="Z",command=cercle).pack(side=BOTTOM,padx=10,pady=10)


ball = canvas.create_oval(10, 10, 60, 60, fill='black')
ball2 = canvas.create_oval(10, 10, 60, 60, fill='black')
ball3 = canvas.create_oval(10, 10, 60, 60, fill='black')
ball4 = canvas.create_oval(10, 10, 60, 60, fill='black')
ball5 = canvas.create_oval(10, 10, 60, 60, fill='black')
ball6 = canvas.create_oval(10, 10, 60, 60, fill='black')

xspeed = 4
yspeed = 5

xspeed2 = 6
yspeed2 = 6

xspeed3 = 2
yspeed3 = 11
    
xspeed4 = 4
yspeed4 = 7

xspeed5 = 7
yspeed5 = 8

xspeed6 = 3
yspeed6 = 9
    
while True:
    canvas.move(ball, xspeed, yspeed)
    pos = canvas.coords(ball)

    if pos[3] >= HEIGHT or pos[1] <= 0:
        yspeed = -yspeed
    if pos[2] >= WIDTH or pos[0] <= 0:
        xspeed = -xspeed
    
    canvas.move(ball2, xspeed2, yspeed2)
    pos = canvas.coords(ball2)
    if pos[3] >= HEIGHT or pos[1] <= 0:
        yspeed2 = -yspeed2
    if pos[2] >= WIDTH or pos[0] <= 0:
        xspeed2 = -xspeed2
    
    canvas.move(ball3, xspeed3, yspeed3)
    pos = canvas.coords(ball3)
    
    if pos[3] >= HEIGHT or pos[1] <= 0:
        yspeed3 = -yspeed3
    if pos[2] >= WIDTH or pos[0] <= 0:
        xspeed3 = -xspeed3
        
    canvas.move(ball4, xspeed4, yspeed4)
    pos = canvas.coords(ball4)
    
    if pos[3] >= HEIGHT or pos[1] <= 0:
        yspeed4 = -yspeed4
    if pos[2] >= WIDTH or pos[0] <= 0:
        xspeed4 = -xspeed4
   
    canvas.move(ball5, xspeed5, yspeed5)
    pos = canvas.coords(ball5)
    
    if pos[3] >= HEIGHT or pos[1] <= 0:
        yspeed5 = -yspeed5
    if pos[2] >= WIDTH or pos[0] <= 0:
        xspeed5 = -xspeed5

      
    canvas.move(ball6, xspeed6, yspeed6)
    pos = canvas.coords(ball6)
    
    if pos[3] >= HEIGHT or pos[1] <= 0:
        yspeed6 = -yspeed6
    if pos[2] >= WIDTH or pos[0] <= 0:
        xspeed6 = -xspeed6
            
            
    root.update()
    time.sleep(0.04)
    

root.mainloop()
