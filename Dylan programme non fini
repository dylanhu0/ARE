from tkinter import *

from random import randrange

from PIL import Image, ImageTk

import math,random

import cmath

import numpy

import time

#Probabilite P
P1= random.random()
print('P1=',P1)

#Liste de couleurs
def couleur(Color):

    """

    definit une couleur aleatoirement entre vert = ami, red = agresseur, white = neutre

    """



    x1=random.random()

    #Color=[]



    if x1 <= 1/3:

        Color.append('red')



    elif x1>1/3 and x1 <=2/3:

        Color.append('green')



    elif x1>2/3:

        Color.append('white')



    return Color
L=[]



for i in range(20):

    L=couleur(L)   



print(L)
#couleurs des boules neutres apres eventuelles transformations
z1c1t1= random.sample(L,1)
z2c1t1= random.sample(L,1)
z3c1t1= random.sample(L,1)
print('z1c1t1=',z1c1t1)
print('z2c1t1=',z2c1t1)
print('z3c1t1=',z3c1t1)

#Comparaison de la qte de boules rouges et vertes

l= z1c1t1+z2c1t1+z3c1t1
rouge=0
vert=0

for k in l:
    if k=='red':
        rouge=rouge+1
    if k=='green':
        vert= vert+1


print('rouge=',rouge)
print('vert=',vert)
    

#Initialisation 

WIDTH = 1500

HEIGHT = 500

LARGEUR = 1200

HAUTEUR = 500

RAYON = 13 

root = Tk()

canvas = Canvas(root, width = WIDTH, height= HEIGHT, bg='grey')

canvas.pack(padx =5, pady =5)

root.title('HarcÃ¨lement')

canvas.pack()



#Angles des Balles 

cangleR1=cmath.exp(0.03j)

cangleR2=cmath.exp(0.035j)

cangleR3=cmath.exp(0.040j)

cangleRC=cmath.exp(0.045j)

cangleBl1=cmath.exp(0.03j)

cangleBl2=cmath.exp(0.035j)

cangleBl3=cmath.exp(0.045j)

cangleV1=cmath.exp(0.03j)

cangleV2=cmath.exp(0.035j)

cangleV3=cmath.exp(0.045j)

cangleV4=cmath.exp(0.050j)

cangleV5=cmath.exp(0.065j)
cangleVz1c1t1=cmath.exp(0.03j)

cangleVz2c1t1=cmath.exp(0.035j)

cangleVz3c1t1=cmath.exp(0.045j)


# position initiale au milieu 

    #X

XR1=70

XR2=70

XR3=70

XRC=70

XBl1=110

XBl2=110

XBl3=110

XV1=90

XV2=90

XV3=90

XV4=90

XV5=90

    #Pour la victime 
Xneutre = 1
XCy = 1

XCy2 = 1

XCy3 = 1

XB = 1

XB2 = 1

XN  = 1

XN2 = 1

X3c1 = 1

X3c2 = 1

    #Y

YR1=70

YR2=70

YR3=70

YRC=70

YBl1=110

YBl2=110

YBl3=110

YV1=90

YV2=90

YV3=90

YV4=90

YV5=90

    #Pour la victime 
Yneutre = 1
YCy = 1

YCy2 = 1

YCy3 = 1

YB = 1

YB2 = 1

YN  = 1

YN2 = 1

Y3c1 = 1

Y3c2 = 1


#Le milieu

XC=LARGEUR/2

YC=HAUTEUR/2



# Echelle 

def maj(nouvelleValeur):

    print(nouvelleValeur)

    

def plus():

    Valeur.set(str(int(Valeur.get())+1))

    print(Valeur.get())

    

def moins():

    Valeur.set(str(int(Valeur.get())-1))

    print(Valeur.get())

Valeur = StringVar()

Valeur.set(0)



#Cause        

cau1=0

def cause1():

    global cau1, Arret 

    Arret=False

    if not(Arret):

        cau1=1

        print('cause1')

        

cau2=0

def cause2():

    global cau2, Arret 

    Arret=False

    if not(Arret):

        cau2=2

        print('cause2')



cau3=0

def cause3():

    global cau3, Arret 

    Arret=False

    if not(Arret):

        cau3=3

        print('cause3')



#type

ty1=0

def type1():

    global ty1, Arret 

    Arret=False

    if not(Arret):        

        ty1=1

        print('type1')

        

ty2=0

def type2():

    global ty2, Arret 

    Arret=False

    if not(Arret):        

        ty2=2

        print('type2')

        

ty3=0

def type3():

    global ty3, Arret 

    Arret=False

    if not(Arret):        

        ty3=3

        print('type3')

        

#Permet de savoir la couleur que doit prendre la victime pour une cause et un type a t=15

c1t1=0

c1t2=0

c1t3=0

c2t1=0

c2t2=0

c2t3=0

c3t1=0

c3t2=0

c3t3=0



#Permet de savoir la couleur que doit prendre la victime pour une cause et un type apres appartion des amis a t=27

C1T1=0

C1T2=0

C1T3=0

C2T1=0

C2T2=0

C2T3=0

C3T1=0

C3T2=0

C3T3=0



#Deplacement

def deplacement():

    global XR1,XR2,XR3,XRC,XBl1,XBl2,XBl3,XV1,XV2,XV3,XV4,XV5,XCy,XCy2,XCy3,XB,XB2,XBc,XN,XN2,X3c1,X3c2,YR1,YR2,YR3,YRC,YBl1,YBl2,YBl3,YV1,YV2,YV3,YV4,YV5,YCy,XCy2,YCy3,YB,YB2,YN,YN2,Y3c1,Y3c2,TX,TY,TX2,TY2,TX3,TY3,DX,DY,RAYON,LARGEUR,HAUTEUR, Arret
    TX=110

    TX2=110
    
    TX3=110

    Xgreen= 90

    Ygreen = 90    

    Xred = 70

    Yred = 70   

    TY=110

    TY2=110 

    TY3=110

    if z1c1t1 == ['green']:

        TX= Xgreen

        TY= Ygreen

        

    elif z1c1t1 == ['red']:

        TX= Xred

        TY= Yred

    if z2c1t1 == ['green']:

        TX2= Xgreen

        TY2= Ygreen        

    elif z2c1t1 == ['red']:

        TX2= Xred

        TY2= Yred
        
    if z3c1t1 == ['green']:

        TX3= Xgreen

        TY3= Ygreen        

    elif z3c1t1 == ['red']:

        TX3= Xred

        TY3= Yred 
#Initialisation des balles

    

        #Balles rouge

    BalleR1 = canvas.create_oval(XR1-RAYON,YR1-RAYON,XR1+RAYON,YR1+RAYON,width=1,fill='red')

    BalleR2 = canvas.create_oval(XR2-RAYON,YR2-RAYON,XR2+RAYON,YR2+RAYON,width=1,fill='red')

    BalleR3 = canvas.create_oval(XR3-RAYON,YR3-RAYON,XR3+RAYON,YR3+RAYON,width=1,fill='red')

        #Balle rouge claire

    BalleRC = canvas.create_oval(XRC-RAYON,YRC-RAYON,XRC+RAYON,YRC+RAYON,width=1,fill='IndianRed2')

        #Balles blanche et balles blanches transformees

    BalleBl1 = canvas.create_oval(XBl1-RAYON,YBl1-RAYON,XBl1+RAYON,YBl1+RAYON,width=1,fill='white')

    BalleBl2 = canvas.create_oval(XBl2-RAYON,YBl2-RAYON,XBl2+RAYON,YBl2+RAYON,width=1,fill='white')

    BalleBl3 = canvas.create_oval(XBl3-RAYON,YBl3-RAYON,XBl3+RAYON,YBl3+RAYON,width=1,fill='white')
    
    BalleBlT1 = canvas.create_oval(TX-RAYON,TY-RAYON,TX+RAYON,TY+RAYON,width=1,fill=z1c1t1)
    
    BalleBlT2 = canvas.create_oval(TX2-RAYON,TY2-RAYON,TX2+RAYON,TY2+RAYON,width=1,fill=z2c1t1)
    
    BalleBlT3 = canvas.create_oval(TX3-RAYON,TY3-RAYON,TX3+RAYON,TY3+RAYON,width=1,fill=z3c1t1)
    

        #Balles verte

    BalleV1 = canvas.create_oval(XV1-RAYON,YV1-RAYON,XV1+RAYON,YV1+RAYON,width=1,fill='green')

    BalleV2 = canvas.create_oval(XV2-RAYON,YV2-RAYON,XV2+RAYON,YV2+RAYON,width=1,fill='green')

    BalleV3 = canvas.create_oval(XV3-RAYON,YV3-RAYON,XV3+RAYON,YV3+RAYON,width=1,fill='green')

    BalleV4 = canvas.create_oval(XV4-RAYON,YV4-RAYON,XV4+RAYON,YV4+RAYON,width=1,fill='green')

    BalleV5 = canvas.create_oval(XV5-RAYON,YV5-RAYON,XV5+RAYON,YV5+RAYON,width=1,fill='green')

    

        #Balle cyan initiale

    BalleCy = canvas.create_oval(XCy-RAYON,YCy-RAYON,XCy+RAYON,YCy+RAYON,width=1,fill='cyan')

        #Balle 3 couleurs

    Balle3c1 = canvas.create_oval(X3c1-RAYON,Y3c1-RAYON,X3c1+RAYON,Y3c1+RAYON,width=1,fill='blue')

        #Balle bleu 

    BalleB = canvas.create_oval(XB-RAYON,YB-RAYON,XB+RAYON,YB+RAYON,width=1,fill='blue')

        #Balle noir

    BalleN = canvas.create_oval(XN-RAYON,YN-RAYON,XN+RAYON,YN+RAYON,width=1,fill='black')

    #Possibilite de l avoir a t =15

        #Balle cyan2 

    BalleCy2 = canvas.create_oval(XCy2-RAYON,YCy2-RAYON,XCy2+RAYON,YCy2+RAYON,width=1,fill='cyan')

        #Balle 3 couleurs 2

    Balle3c2 = canvas.create_oval(X3c2-RAYON,Y3c2-RAYON,X3c2+RAYON,Y3c2+RAYON,width=1,fill='blue')

    #Possibilite de l avoir a t=27  

        #Balle cyan3 

    BalleCy3 = canvas.create_oval(XCy3-RAYON,YCy3-RAYON,XCy3+RAYON,YCy3+RAYON,width=1,fill='cyan')

        #Balle bleu 

    BalleB2 = canvas.create_oval(XB2-RAYON,YB2-RAYON,XB2+RAYON,YB2+RAYON,width=1,fill='blue')

       #Balle noir

    BalleN2 = canvas.create_oval(XN2-RAYON,YN2-RAYON,XN2+RAYON,YN2+RAYON,width=1,fill='black')
    
        #BalleNeutre
    BalleNeutre = canvas.create_oval(Xneutre-RAYON,Yneutre-RAYON,Xneutre+RAYON,Yneutre+RAYON,width=1,fill='white')

    

        

    

    Arret=False

    while not(Arret):

        #vitesse des balles

        VR1=cangleR1*complex(XR1,YR1)

        XR1=VR1.real

        YR1=VR1.imag



        VR2=cangleR2*complex(XR2,YR2)

        XR2=VR2.real

        YR2=VR2.imag  



        VR3=cangleR3*complex(XR3,YR3)

        XR3=VR3.real

        YR3=VR3.imag

        

        VRC=cangleRC*complex(XRC,YRC)

        XRC=VRC.real

        YRC=VRC.imag

        

        VBl1=cangleBl1*complex(XBl1,YBl1)

        XBl1=VBl1.real

        YBl1=VBl1.imag

        

        VBl2=cangleBl2*complex(XBl2,YBl2)

        XBl2=VBl2.real

        YBl2=VBl2.imag

    

        VBl3=cangleBl3*complex(XBl3,YBl3)

        XBl3=VBl3.real

        YBl3=VBl3.imag

        

        VV1=cangleV1*complex(XV1,YV1)

        XV1=VV1.real

        YV1=VV1.imag

        

        VV2=cangleV2*complex(XV2,YV2)

        XV2=VV2.real

        YV2=VV2.imag

        

        VV3=cangleV3*complex(XV3,YV3)

        XV3=VV3.real

        YV3=VV3.imag

        

        VV4=cangleV4*complex(XV4,YV4)

        XV4=VV4.real

        YV4=VV4.imag

        

        VV5=cangleV5*complex(XV5,YV5)

        XV5=VV5.real

        YV5=VV5.imag
        
        VVz1c1t1=cangleVz1c1t1*complex(TX,TY)
        TX=VVz1c1t1.real
        TY=VVz1c1t1.imag
        
        VVz2c1t1=cangleVz2c1t1*complex(TX2,TY2)
        TX2=VVz2c1t1.real
        TY2=VVz2c1t1.imag 
        
        VVz3c1t1=cangleVz3c1t1*complex(TX3,TY3)
        TX3=VVz3c1t1.real
        TY3=VVz3c1t1.imag
        #Affichage

        global cau1,cau2,cau3,ty1,ty2,ty3,c1t1,c1t2,c1t3,c2t1,c2t2,c2t3,c3t1,c3t2,c3t3,C1T1,C1T2,C1T3,C2T1,C2T2,C2T3,C3T1,C3T2,C3T3

        if cau1==1:

            if ty1 ==1:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)
                
                for e in range(t):
                    if e>=1:
                        canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                        canvas.coords(BalleBl2,XC+XBl2-RAYON,YC+YBl2-RAYON,XC+XBl2+RAYON,YC+YBl2+RAYON)

                        canvas.coords(BalleBl3,XC+XBl3-RAYON,YC+YBl3-RAYON,XC+XBl3+RAYON,YC+YBl3+RAYON)
                    
                    if P1<=0.5 and e>=21:
                        canvas.delete(BalleBl1,BalleBl2,BalleBl3)
                        canvas.coords(BalleBlT1,XC+TX-RAYON,YC+TY-RAYON,XC+TX+RAYON,YC+TY+RAYON)
                        canvas.coords(BalleBlT2,XC+TX2-RAYON,YC+TY2-RAYON,XC+TX2+RAYON,YC+TY2+RAYON)
                        canvas.coords(BalleBlT3,XC+TX3-RAYON,YC+TY3-RAYON,XC+TX3+RAYON,YC+TY3+RAYON)
                    
                c1t1=11

                C1T1=11

            if ty2 ==2:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleRC,XC+XRC-RAYON,YC+YRC-RAYON,XC+XRC+RAYON,YC+YRC+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                canvas.coords(BalleBl2,XC+XBl2-RAYON,YC+YBl2-RAYON,XC+XBl2+RAYON,YC+YBl2+RAYON)

                c1t2=12

                C1T2=12

            if ty3 ==3:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleR2,XC+XR2-RAYON,YC+YR2-RAYON,XC+XR2+RAYON,YC+YR2+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                canvas.coords(BalleBl2,XC+XBl2-RAYON,YC+YBl2-RAYON,XC+XBl2+RAYON,YC+YBl2+RAYON)

                c1t3=13

                C1T3=13

                

        if cau2==2:

            if ty1 ==1:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleRC,XC+XRC-RAYON,YC+YRC-RAYON,XC+XRC+RAYON,YC+YRC+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                canvas.coords(BalleBl2,XC+XBl2-RAYON,YC+YBl2-RAYON,XC+XBl2+RAYON,YC+YBl2+RAYON)

                c2t1=21

                C2T1=21

            if ty2 ==2:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleR2,XC+XR2-RAYON,YC+YR2-RAYON,XC+XR2+RAYON,YC+YR2+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                canvas.coords(BalleBl2,XC+XBl2-RAYON,YC+YBl2-RAYON,XC+XBl2+RAYON,YC+YBl2+RAYON)

                c2t2=22

                C2T2=22

            if ty3 ==3:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleR2,XC+XR2-RAYON,YC+YR2-RAYON,XC+XR2+RAYON,YC+YR2+RAYON)

                canvas.coords(BalleRC,XC+XRC-RAYON,YC+YRC-RAYON,XC+XRC+RAYON,YC+YRC+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON) 

                c2t3=23

                C2T3=23

        if cau3==3:

            if ty1 ==1:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleR2,XC+XR2-RAYON,YC+YR2-RAYON,XC+XR2+RAYON,YC+YR2+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                canvas.coords(BalleBl2,XC+XBl2-RAYON,YC+YBl2-RAYON,XC+XBl2+RAYON,YC+YBl2+RAYON)

                c3t1=31

                C3T1=31

            if ty2 ==2:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleR2,XC+XR2-RAYON,YC+YR2-RAYON,XC+XR2+RAYON,YC+YR2+RAYON)

                canvas.coords(BalleRC,XC+XRC-RAYON,YC+YRC-RAYON,XC+XRC+RAYON,YC+YRC+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                c3t2=32

                C3T2=32

            if ty3 ==3:

                canvas.coords(BalleR1,XC+XR1-RAYON,YC+YR1-RAYON,XC+XR1+RAYON,YC+YR1+RAYON)

                canvas.coords(BalleR2,XC+XR2-RAYON,YC+YR2-RAYON,XC+XR2+RAYON,YC+YR2+RAYON)

                canvas.coords(BalleR3,XC+XR3-RAYON,YC+YR3-RAYON,XC+XR3+RAYON,YC+YR3+RAYON)

                canvas.coords(BalleBl1,XC+XBl1-RAYON,YC+YBl1-RAYON,XC+XBl1+RAYON,YC+YBl1+RAYON)

                c3t3=33

                C3T3=33

        #En fonction du temps

        #Apparition de la victime
            
        if t == 1:
            canvas.coords(BalleNeutre,XC+Xneutre-RAYON,YC+Yneutre-RAYON,XC+Xneutre+RAYON,YC+Yneutre+RAYON)
            
        if t == 5:
            canvas.delete(BalleNeutre)
            canvas.coords(BalleCy,XC+XCy-RAYON,YC+YCy-RAYON,XC+XCy+RAYON,YC+YCy+RAYON)

        #Variation rapide des couleurs de la victime    

        if t >= 8 and t<15:

            colors=["cyan","blue","black"]

            canvas.itemconfig(Balle3c1, fill=numpy.random.choice(colors))

            canvas.coords(Balle3c1,XC+X3c1-RAYON,YC+Y3c1-RAYON,XC+X3c1+RAYON,YC+Y3c1+RAYON)

        #Changement de couleur de la victime

        if t == 15:

            if c1t1== 11:

                canvas.coords(BalleCy2,XC+XCy2-RAYON,YC+YCy2-RAYON,XC+XCy2+RAYON,YC+YCy2+RAYON)

                c1t1=0

            if c1t2 == 12:

                canvas.coords(BalleCy2,XC+XCy2-RAYON,YC+YCy2-RAYON,XC+XCy2+RAYON,YC+YCy2+RAYON)

                c1t2=0

            if c1t3 == 13:

                canvas.coords(BalleB,XC+XB-RAYON,YC+YB-RAYON,XC+XB+RAYON,YC+YB+RAYON)

                c1t3=0

            if c2t1 == 21:

                canvas.coords(BalleCy2,XC+XCy2-RAYON,YC+YCy2-RAYON,XC+XCy2+RAYON,YC+YCy2+RAYON) 

                c2t1=0

            if c2t2 == 22:

                canvas.coords(BalleB,XC+XB-RAYON,YC+YB-RAYON,XC+XB+RAYON,YC+YB+RAYON)

                c2t2=0

            if c2t3 == 23:

                canvas.coords(BalleN,XC+XN-RAYON,YC+YN-RAYON,XC+XN+RAYON,YC+YN+RAYON)

                c2t3=0

            if c3t1 == 31:

                canvas.coords(BalleB,XC+XB-RAYON,YC+YB-RAYON,XC+XB+RAYON,YC+YB+RAYON)

                c3t1=0

            if c3t2 == 32:

                canvas.coords(BalleN,XC+XN-RAYON,YC+YN-RAYON,XC+XN+RAYON,YC+YN+RAYON)

                c3t2=0

            if c3t3 == 33:

                canvas.coords(BalleN,XC+XN-RAYON,YC+YN-RAYON,XC+XN+RAYON,YC+YN+RAYON)

                c3t3=0    

        #Temps des amis

        if t >= 20:

            if int(Valeur.get()) == 1:

                canvas.coords(BalleV1,XC+XV1-RAYON,YC+YV1-RAYON,XC+XV1+RAYON,YC+YV1+RAYON)

            

            if int(Valeur.get()) == 2:

                canvas.coords(BalleV1,XC+XV1-RAYON,YC+YV1-RAYON,XC+XV1+RAYON,YC+YV1+RAYON)

                canvas.coords(BalleV2,XC+XV2-RAYON,YC+YV2-RAYON,XC+XV2+RAYON,YC+YV2+RAYON)

            

            if int(Valeur.get()) == 3:

                canvas.coords(BalleV1,XC+XV1-RAYON,YC+YV1-RAYON,XC+XV1+RAYON,YC+YV1+RAYON)

                canvas.coords(BalleV2,XC+XV2-RAYON,YC+YV2-RAYON,XC+XV2+RAYON,YC+YV2+RAYON)

                canvas.coords(BalleV3,XC+XV3-RAYON,YC+YV3-RAYON,XC+XV3+RAYON,YC+YV3+RAYON)

            

            if int(Valeur.get()) == 4:

                canvas.coords(BalleV1,XC+XV1-RAYON,YC+YV1-RAYON,XC+XV1+RAYON,YC+YV1+RAYON)

                canvas.coords(BalleV2,XC+XV2-RAYON,YC+YV2-RAYON,XC+XV2+RAYON,YC+YV2+RAYON)

                canvas.coords(BalleV3,XC+XV3-RAYON,YC+YV3-RAYON,XC+XV3+RAYON,YC+YV3+RAYON)

                canvas.coords(BalleV4,XC+XV4-RAYON,YC+YV4-RAYON,XC+XV4+RAYON,YC+YV4+RAYON)



            if int(Valeur.get()) == 5:

                canvas.coords(BalleV1,XC+XV1-RAYON,YC+YV1-RAYON,XC+XV1+RAYON,YC+YV1+RAYON)

                canvas.coords(BalleV2,XC+XV2-RAYON,YC+YV2-RAYON,XC+XV2+RAYON,YC+YV2+RAYON)

                canvas.coords(BalleV3,XC+XV3-RAYON,YC+YV3-RAYON,XC+XV3+RAYON,YC+YV3+RAYON)

                canvas.coords(BalleV4,XC+XV4-RAYON,YC+YV4-RAYON,XC+XV4+RAYON,YC+YV4+RAYON)

                canvas.coords(BalleV5,XC+XV5-RAYON,YC+YV5-RAYON,XC+XV5+RAYON,YC+YV5+RAYON)

        #Variation rapide des couleurs de la victime2

        if t > 22 and t < 27:

            colors=["cyan","blue","black"]

            canvas.itemconfig(Balle3c2, fill=numpy.random.choice(colors))

            canvas.coords(Balle3c2,XC+X3c2-RAYON,YC+Y3c2-RAYON,XC+X3c2+RAYON,YC+Y3c2+RAYON)

            

        #Changement de couleur de la victime selon le nombre dâamis et le nombre d'harceleur  

        if t >=27:

            if int(Valeur.get()) == 0:

                if (C1T1 == 11) and vert>rouge and P<=0.5:
                    
                    canvas.delete(Balle3c2)
                    canvas.coords(BalleB2,XC+XB2-RAYON,YC+YB2-RAYON,XC+XB2+RAYON,YC+YB2+RAYON)

                else:

                    canvas.coords(BalleN2,XC+XN2-RAYON,YC+YN2-RAYON,XC+XN2+RAYON,YC+YN2+RAYON)

            if int(Valeur.get()) == 1:

                if (C1T1 == 11 ) or (C1T2 == 12) or (C1T3 == 13) or (C2T1 == 21) or (C2T2 == 22):

                    canvas.coords(BalleB2,XC+XB2-RAYON,YC+YB2-RAYON,XC+XB2+RAYON,YC+YB2+RAYON)

                else:

                    canvas.coords(BalleN2,XC+XN2-RAYON,YC+YN2-RAYON,XC+XN2+RAYON,YC+YN2+RAYON)

            if int(Valeur.get()) == 2:

                if (C1T1 == 11) or (C1T2 == 12) or (C2T1 == 21):

                    canvas.coords(BalleCy3,XC+XCy3-RAYON,YC+YCy3-RAYON,XC+XCy3+RAYON,YC+YCy3+RAYON)

                if (C1T3 == 13) or (C2T2 == 22) or (C3T1 == 31):

                    canvas.coords(BalleB2,XC+XB2-RAYON,YC+YB2-RAYON,XC+XB2+RAYON,YC+YB2+RAYON)

                else:

                    canvas.coords(BalleN2,XC+XN2-RAYON,YC+YN2-RAYON,XC+XN2+RAYON,YC+YN2+RAYON)

            if int(Valeur.get()) == 3:

                if (C1T1 == 11 ) or (C1T2 == 12) or (C1T3 == 13) or (C2T1 == 21) or (C2T2 == 22) or (C3T1 == 31):

                    canvas.coords(BalleCy3,XC+XCy3-RAYON,YC+YCy3-RAYON,XC+XCy3+RAYON,YC+YCy3+RAYON)

                else:

                    canvas.coords(BalleB2,XC+XB2-RAYON,YC+YB2-RAYON,XC+XB2+RAYON,YC+YB2+RAYON)

            if int(Valeur.get()) == 4:

                if (C3T3 == 33):

                    canvas.coords(BalleB2,XC+XB2-RAYON,YC+YB2-RAYON,XC+XB2+RAYON,YC+YB2+RAYON)

                else:

                    canvas.coords(BalleCy3,XC+XCy3-RAYON,YC+YCy3-RAYON,XC+XCy3+RAYON,YC+YCy3+RAYON)

            if int(Valeur.get()) == 5:

                canvas.coords(BalleCy3,XC+XCy3-RAYON,YC+YCy3-RAYON,XC+XCy3+RAYON,YC+YCy3+RAYON)

                

        root.update()

        time.sleep(0.04)

        

    

#Go        

def go():

    global t

    t=0

    heur.set(0)

    timer()     

    deplacement()



#Effacer

def Effacer():

    global t

    t=30

    heur.set(30)

    global Arret

    Arret=True

    canvas.delete('all')

    global cau1,cau2,cau3,ty1,ty2,ty3

    cau1 = 0

    cau2 = 0

    cau3 = 0

    ty1 = 0

    ty2 = 0

    ty3 = 0

    

    

Arret=False



#TIMER

t = 0

def timer():

    global t  

    # changement de couleur

    if t < 30:

        new_time = heur.get() + 1

        heur.set(new_time)

        root.after(1000, timer) # call this function again in 1,000 milliseconds

        t += 1



heur = IntVar()

heur.set(0)

frame = Frame(root, width=500, height=500)

frame.pack()

timer_display = Label(root, textvar= heur)

timer_display.place(x= 600, y= 495, anchor = CENTER)






#Les positions et boutons

# CrÃ©ation d'un widget Scale

echelle = Scale(root,from_=0,to=5,resolution=1,orient=HORIZONTAL,\

length=300,width=20,label="Nombre d'amis",tickinterval=1,variable=Valeur,command='')

echelle.place(x=830, y=515)

# CrÃ©ation d'un widget Button (bouton +)

Button(root,text="+",command=plus).place(x=965, y=605)

# CrÃ©ation d'un widget Button (bouton -)

Button(root,text="-",command=moins).place(x=985, y=605)

#Les causes d agression

label = Label(root, text="Les causes d'agression", bg="gold2")

label.place(x=40,y=515)

Button(root,text="Different race",command=cause1).place(x=40, y=545)

Button(root,text="Mental disorder",command=cause2).place(x=40, y=575)

Button(root,text="Different sexual orientation",command=cause3).place(x=40, y=605)

#Les types d agression

label = Label(root, text="Les types d'agression", bg="gold2")

label.place(x=560,y=515)

Button(root,text="Social bullying",command=type1).place(x=560,y=545)

Button(root,text="Physical bullying",command=type2).place(x=560,y=575)

Button(root,text="Verbal bullying",command=type3).place(x=560,y=605)

#Go

BoutonGo = Button(root, text ='Go', command = go)

BoutonGo.place(x=570, y=680)

#effacer

BoutonEffacer = Button(root, text ='Effacer', command = Effacer)

BoutonEffacer.place(x=610, y=680)



root.mainloop()

        
