#Synthese avec boutons


from tkinter import *
import random
import time
import math
import cmath


WIDTH = 600
HEIGHT = 450

root = Tk()
canvas = Canvas(root, width = WIDTH, height= HEIGHT, bg='white')
canvas.pack(padx =5, pady =5)
root.title('Bouncing Ball')
canvas.pack()


RAYON = 15 # rayon de la balle

# position initiale au milieu
X=50
Y=50
XC=WIDTH/2
YC=HEIGHT/2


cangle=cmath.exp(0.05j)
print(cangle)
x2=random.random()


def couleur2(x2):
    """
    fzefzfzfezfezfze -> list[str]
    """
    Color2=[]
    if x2>= 0 and x2 <= 0.20:
        Color2.append('red')
    elif x2>0.2:
        Color2.append('black')
    return Color2

Color2=couleur2(x2)
print(Color2)


def rotation():
    """  de la balle """
    #print('in deplacement')
    global X,X2,Y2,Y,DX,DY,RAYON,LARGEUR,HAUTEUR,Arret
    Balle = canvas.create_oval(X,Y,X,Y,fill='red')
    Arret=False
    while not(Arret):
        V=cangle*complex(X,Y)
        X=V.real
        Y=V.imag
        canvas.coords(Balle,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)
        root.update()
        time.sleep(0.04)

def aleatoire():
    global Arret
    ball2 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color2,1))
    xspeed2 = 6
    yspeed2 = 6
    Arret=False
    while not(Arret):
        canvas.move(ball2, xspeed2, yspeed2)
        pos = canvas.coords(ball2)
        if pos[3] >= HEIGHT or pos[1] <= 0:
            yspeed2 = -yspeed2
        if pos[2] >= WIDTH or pos[0] <= 0:
            xspeed2 = -xspeed2
        root.update()
        time.sleep(0.04)

def go():
    #pour la couleur
    global Color2,Arret
    canvas.delete('all')
    x2=random.random()
    Color2=couleur2(x2)
    Arret=False
    aleatoire()

        
def Effacer():
    global Arret
    Arret=True
    canvas.delete('all')
    
Arret=False

# Echelle 

def maj(nouvelleValeur):
    # nouvelle valeur en argument
    print(nouvelleValeur)
def plus():
    Valeur.set(str(int(Valeur.get())+1))
    print(Valeur.get())
def moins():
    Valeur.set(str(int(Valeur.get())-1))
    print(Valeur.get())


Valeur = StringVar()
Valeur.set(0)
# Création d'un widget Scale
echelle = Scale(root,from_=0,to=5,resolution=1,orient=HORIZONTAL,\
length=300,width=20,label="Nombre d'amis",tickinterval=1,variable=Valeur,command=maj)
echelle.pack(padx=10,pady=10)



#Les boutons 

# Création d'un widget Button (bouton +)
Button(root,text="+",command=plus).pack(padx=10,pady=10)

# Création d'un widget Button (bouton -)
Button(root,text="-",command=moins).pack(padx=10,pady=10)

BoutonGo = Button(root, text ='Go', command = go)
BoutonGo.pack(side = LEFT, padx = 10, pady = 10)

BoutonGo = Button(root, text ='Rotation', command = rotation)
BoutonGo.pack(side = LEFT, padx = 10, pady = 10)

BoutonGo = Button(root, text ='Aléatoire', command = aleatoire)
BoutonGo.pack(side = LEFT, padx = 10, pady = 10)

BoutonEffacer = Button(root, text ='Effacer', command = Effacer)
BoutonEffacer.pack(side = LEFT, padx = 5, pady = 5)

Checkbutton(root,text="1)Being Gay, Lesbian, Bisexual or Transgender                      ",command=cercle).pack(side=LEFT,padx=10,pady=10)
Checkbutton(root,text="2)Being Shy or Socially Awkward                                    ",command=cercle).pack(side=LEFT,padx=10,pady=10)
Checkbutton(root,text="3) Having a Learning Disability or Emotional or Behavioral Disorder",command=cercle).pack(side=LEFT,padx=10,pady=10)

Checkbutton(root,text="Physical bullying",command=cercle).pack(side=BOTTOM,padx=10,pady=10)
Checkbutton(root,text="Verbal bullying  ",command=cercle).pack(side=BOTTOM,padx=10,pady=10)
Checkbutton(root,text="Social bullying  ",command=cercle).pack(side=BOTTOM,padx=10,pady=10)


root.mainloop()
