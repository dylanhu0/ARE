from tkinter import *
import random
import time
import math
import cmath


WIDTH = 500
HEIGHT = 400



LARGEUR = 480
HAUTEUR = 320
RAYON = 15 # rayon de la balle

cangle=cmath.exp(0.05j)
print(cangle)

# position initiale au milieu
X=50
Y=50
XC=LARGEUR/2
YC=HAUTEUR/2



root = Tk()
canvas = Canvas(root, width = WIDTH, height= HEIGHT, bg='white')
canvas.pack(padx =5, pady =5)
root.title('Bouncing Ball')
canvas.pack()



def cercle():
    
    
    canvas.delete('all')
    x2=random.random()
    x3=random.random()
    x4=random.random()
    x5=random.random()

    Color=couleur(x1)
    Color2=couleur2(x2)
    Color3=couleur3(x3)
    Color4=couleur4(x4)
    Color5=couleur5(x5)
    
    #Color6=[]
        
    #if  x1 <= 0.1 or x2 <= 0.1 or x3 <= 0.1 or x4 <= 0.1 or x5 <= 0.1: 
     #   Color6.append('blue')
    #elif x1 > 0.1 and x1 <=0.2 or x2 > 0.1 and x2 <=0.2 or x3 > 0.1 and x3 <=0.2 or x4 > 0.1 and x4 <=0.2 or x5 > 0.1 and x5 <=0.2: 
      #  Color6.append('red')
   
    #else:
    #    Color6.append('black')

    
    
    ball = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color,1))
    ball2 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color2,1))
    ball3 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color3,1))
    ball4 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color4,1))
    ball5 = canvas.create_oval(10, 10, 60, 60, fill=random.sample(Color5,1))
    
    


    xspeed = 10 
    yspeed = 10 
 
    xspeed2 = 6
    yspeed2 = 6

    xspeed3 = 2
    yspeed3 = 11
    
    xspeed4 = 4
    yspeed4 = 7

    xspeed5 = 7
    yspeed5 = 8

    #xspeed6 = 3
    #yspeed6 = 9
    
   
        
        
    ball11= canvas.create_oval(X-RAYON,Y-RAYON,X+RAYON,Y+RAYON,width=1,fill='red')
    ball22= canvas.create_oval(X-RAYON,Y-RAYON,X+RAYON,Y+RAYON,width=1,fill='red')
    ball33= canvas.create_oval(X-RAYON,Y-RAYON,X+RAYON,Y+RAYON,width=1,fill='red')
    ball44= canvas.create_oval(X-RAYON,Y-RAYON,X+RAYON,Y+RAYON,width=1,fill='red')
    ball55= canvas.create_oval(X-RAYON,Y-RAYON,X+RAYON,Y+RAYON,width=1,fill='red')

    while True:
        
#BALLE 1
        #Si la balle est bleue
        #if x1>0.10 and x1 <=0.20:
         #   canvas.coords(ball)
          #  root.update()        

        #Si la balle est rouge 
        if x1>= 0 and x1 <= 0.1:
               
            global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
            V=cangle*complex(X,Y)
            X=V.real
            Y=V.imag
    
        
            canvas.coords(ball11,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)
            root.update()
            canvas.delete(ball)
            
        #Si la balle n est pas rouge             
        if x1 > 0.1:         
            canvas.move(ball, xspeed, yspeed)
            pos = canvas.coords(ball)
        
            if pos[3] >= HEIGHT or pos[1] <= 0:
                yspeed = -yspeed
            if pos[2] >= WIDTH or pos[0] <= 0:
                xspeed = -xspeed
            canvas.delete(ball11)
#BALLE 2            
        #Si la balle2 est rouge 
        if x2>= 0 and x2 <= 0.1:
               
            global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
            V=cangle*complex(X,Y)
            X=V.real
            Y=V.imag
    
        
            canvas.coords(ball22,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)
            root.update()
            canvas.delete(ball2)
            
        if x2 > 0.1:         
            canvas.move(ball2, xspeed2, yspeed2)
            pos = canvas.coords(ball2)
        
            if pos[3] >= HEIGHT or pos[1] <= 0:
                yspeed2 = -yspeed2
            if pos[2] >= WIDTH or pos[0] <= 0:
                xspeed2 = -xspeed2
            canvas.delete(ball22)
#BALLE 3            
        #Si la balle3 est rouge     
        if x3>= 0 and x3 <= 0.1:
               
            global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
            V=cangle*complex(X,Y)
            X=V.real
            Y=V.imag
    
        
            canvas.coords(ball33,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)
            root.update()
            canvas.delete(ball3)
            
        if x3 > 0.1:         
            canvas.move(ball3, xspeed3, yspeed3)
            pos = canvas.coords(ball3)
        
            if pos[3] >= HEIGHT or pos[1] <= 0:
                yspeed3 = -yspeed3
            if pos[2] >= WIDTH or pos[0] <= 0:
                xspeed3 = -xspeed3
            canvas.delete(ball33)

#BALLE 4        
        #Si la balle4 est rouge
        if x4>= 0 and x4 <= 0.1:
               
            global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
            V=cangle*complex(X,Y)
            X=V.real
            Y=V.imag
    
        
            canvas.coords(ball44,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)
            root.update()
            canvas.delete(ball4)
            
        if x4 > 0.1:         
            canvas.move(ball4, xspeed4, yspeed4)
            pos = canvas.coords(ball4)
        
            if pos[3] >= HEIGHT or pos[1] <= 0:
                yspeed4 = -yspeed4
            if pos[2] >= WIDTH or pos[0] <= 0:
                xspeed4 = -xspeed4
            canvas.delete(ball44)
    

#BALLE 5
        #Si la balle5 est rouge
        if x5>= 0 and x5 <= 0.1:
               
            global X,Y,DX,DY,RAYON,LARGEUR,HAUTEUR
            V=cangle*complex(X,Y)
            X=V.real
            Y=V.imag
    
        
            canvas.coords(ball55,XC+X-RAYON,YC+Y-RAYON,XC+X+RAYON,YC+Y+RAYON)
            root.update()
            canvas.delete(ball5)
            
        if x5 > 0.1:         
            canvas.move(ball5, xspeed5, yspeed5)
            pos = canvas.coords(ball5)
        
            if pos[3] >= HEIGHT or pos[1] <= 0:
                yspeed5 = -yspeed5
            if pos[2] >= WIDTH or pos[0] <= 0:
                xspeed5 = -xspeed5
            canvas.delete(ball55)
    
  
        
       
        root.update()
        time.sleep(0.08)
        



def Effacer():

    canvas.delete(ALL)
    
            
        

BoutonGo = Button(root, text ='Go', command = cercle)
BoutonGo.pack(side = LEFT, padx = 10, pady = 10)

BoutonEffacer = Button(root, text ='Effacer', command = Effacer)
BoutonEffacer.pack(side = LEFT, padx = 5, pady = 5)




Checkbutton(root,text="A",command=cercle).pack(side=TOP,padx=10,pady=10)
Checkbutton(root,text="B",command=cercle).pack(side=TOP,padx=10,pady=10)
Checkbutton(root,text="C",command=cercle).pack(side=TOP,padx=10,pady=10)

Checkbutton(root,text="X",command=cercle).pack(side=BOTTOM,padx=10,pady=10)
Checkbutton(root,text="Y",command=cercle).pack(side=BOTTOM,padx=10,pady=10)
Checkbutton(root,text="Z",command=cercle).pack(side=BOTTOM,padx=10,pady=10)


root.mainloop()


